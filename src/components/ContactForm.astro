---
export interface Props {
  className?: string;
}

const { className = '' } = Astro.props;
---

<form class={`contact-form ${className}`} id="contactForm">
  <div class="form-header">
    <h3>Envíanos un mensaje</h3>
    <p>Estamos aquí para ayudarte. Completa el formulario y te responderemos pronto.</p>
  </div>
  
  <div class="form-grid">
    <div class="form-group">
      <label for="name">Nombre completo *</label>
      <input 
        type="text" 
        id="name" 
        name="name" 
        required 
        placeholder="Tu nombre completo"
      />
    </div>
    
    <div class="form-group">
      <label for="email">Correo electrónico *</label>
      <input 
        type="email" 
        id="email" 
        name="email" 
        required 
        placeholder="tu@email.com"
      />
    </div>
    
    <div class="form-group">
      <label for="phone">Teléfono</label>
      <input 
        type="tel" 
        id="phone" 
        name="phone" 
        placeholder="+57 300 123 4567"
      />
    </div>
    
    <div class="form-group">
      <label for="subject">Asunto *</label>
      <select id="subject" name="subject" required>
        <option value="">Selecciona un asunto</option>
        <option value="consulta-producto">Consulta sobre producto</option>
        <option value="pedido">Realizar pedido</option>
        <option value="cambio-devolucion">Cambio o devolución</option>
        <option value="colaboracion">Colaboración</option>
        <option value="otro">Otro</option>
      </select>
    </div>
  </div>
  
  <div class="form-group full-width">
    <label for="message">Mensaje *</label>
    <textarea 
      id="message" 
      name="message" 
      required 
      rows="5"
      placeholder="Cuéntanos en qué podemos ayudarte..."
    ></textarea>
  </div>
  
  <div class="form-group checkbox-group">
    <label class="checkbox-label">
      <input type="checkbox" id="privacy" name="privacy" required />
      <span class="checkmark"></span>
      <span class="checkbox-text">
        Acepto la <a href="/politica-privacidad" target="_blank">política de privacidad</a> 
        y el tratamiento de mis datos personales *
      </span>
    </label>
  </div>
  
  <div class="form-group checkbox-group">
    <label class="checkbox-label">
      <input type="checkbox" id="newsletter" name="newsletter" />
      <span class="checkmark"></span>
      <span class="checkbox-text">
        Quiero recibir noticias y ofertas especiales por correo electrónico
      </span>
    </label>
  </div>
  
  <div class="form-actions">
    <button type="submit" class="submit-btn">
      <span class="btn-text">Enviar mensaje</span>
      <span class="btn-loading" style="display: none;">Enviando...</span>
    </button>
    
    <button type="button" class="whatsapp-btn" id="whatsappContact">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
        <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488"/>
      </svg>
      Contactar por WhatsApp
    </button>
  </div>
  
  <div class="form-status" id="formStatus" style="display: none;"></div>
</form>

<style>
  .contact-form {
    background: white;
    border-radius: 12px;
    padding: 32px;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
    max-width: 600px;
    margin: 0 auto;
  }
  
  .form-header {
    text-align: center;
    margin-bottom: 32px;
  }
  
  .form-header h3 {
    margin: 0 0 8px 0;
    font-size: 1.5rem;
    font-weight: 700;
    color: #333;
  }
  
  .form-header p {
    margin: 0;
    color: #666;
    font-size: 0.95rem;
    line-height: 1.5;
  }
  
  .form-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    margin-bottom: 20px;
  }
  
  .form-group {
    display: flex;
    flex-direction: column;
    gap: 6px;
  }
  
  .form-group.full-width {
    grid-column: 1 / -1;
  }
  
  .form-group label {
    font-size: 0.875rem;
    font-weight: 600;
    color: #333;
  }
  
  .form-group input,
  .form-group select,
  .form-group textarea {
    padding: 12px 16px;
    border: 2px solid #e5e5e5;
    border-radius: 8px;
    font-size: 0.95rem;
    transition: all 0.2s ease;
    font-family: inherit;
  }
  
  .form-group input:focus,
  .form-group select:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: #dc2626;
    box-shadow: 0 0 0 3px rgba(209, 50, 25, 0.1);
  }
  
  .form-group textarea {
    resize: vertical;
    min-height: 120px;
  }
  
  .checkbox-group {
    margin: 16px 0;
  }
  
  .checkbox-label {
    display: flex;
    align-items: flex-start;
    gap: 12px;
    cursor: pointer;
    line-height: 1.5;
  }
  
  .checkbox-label input[type="checkbox"] {
    display: none;
  }
  
  .checkmark {
    width: 18px;
    height: 18px;
    border: 2px solid #ddd;
    border-radius: 4px;
    position: relative;
    flex-shrink: 0;
    margin-top: 2px;
    transition: all 0.2s ease;
  }
  
  .checkbox-label input:checked + .checkmark {
    background: #dc2626;
    border-color: #dc2626;
  }
  
  .checkbox-label input:checked + .checkmark::after {
    content: '✓';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #F5DEB3;
    font-size: 12px;
    font-weight: bold;
  }
  
  .checkbox-text {
    font-size: 0.875rem;
    color: #666;
  }
  
  .checkbox-text a {
    color: #dc2626;
    text-decoration: none;
  }
  
  .checkbox-text a:hover {
    text-decoration: underline;
  }
  
  .form-actions {
    display: flex;
    flex-direction: column;
    gap: 12px;
    margin-top: 24px;
  }
  
  .submit-btn {
    background: #dc2626;
    color: #F5DEB3;
    border: none;
    padding: 16px 24px;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    position: relative;
  }
  
  .submit-btn:hover:not(:disabled) {
    background: #b91c1c;
    transform: translateY(-1px);
  }
  
  .submit-btn:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }
  
  .whatsapp-btn {
    background: #25D366;
    color: #F5DEB3;
    border: none;
    padding: 12px 20px;
    border-radius: 8px;
    font-size: 0.9rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
  }
  
  .whatsapp-btn:hover {
    background: #1da851;
    transform: translateY(-1px);
  }
  
  .form-status {
    margin-top: 16px;
    padding: 12px 16px;
    border-radius: 8px;
    font-size: 0.875rem;
    text-align: center;
  }
  
  .form-status.success {
    background: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
  }
  
  .form-status.error {
    background: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
  }
  
  @media (max-width: 768px) {
    .contact-form {
      padding: 24px 20px;
      margin: 0 16px;
    }
    
    .form-grid {
      grid-template-columns: 1fr;
      gap: 16px;
    }
    
    .form-header h3 {
      font-size: 1.25rem;
    }
    
    .form-actions {
      gap: 16px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contactForm');
    const submitBtn = form?.querySelector('.submit-btn');
    const btnText = submitBtn?.querySelector('.btn-text');
    const btnLoading = submitBtn?.querySelector('.btn-loading');
    const formStatus = document.getElementById('formStatus');
    const whatsappBtn = document.getElementById('whatsappContact');
    
    // Manejar envío del formulario
    form?.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      if (!submitBtn || !btnText || !btnLoading || !formStatus) return;
      
      // Mostrar estado de carga
      submitBtn.disabled = true;
      btnText.style.display = 'none';
      btnLoading.style.display = 'inline';
      formStatus.style.display = 'none';
      
      try {
        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());
        
        // Simular envío (aquí iría la lógica real de envío)
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        // Mostrar éxito
        showStatus('¡Mensaje enviado correctamente! Te responderemos pronto.', 'success');
        form.reset();
        
      } catch (error) {
        console.error('Error al enviar formulario:', error);
        showStatus('Error al enviar el mensaje. Por favor, intenta de nuevo.', 'error');
      } finally {
        // Restaurar botón
        submitBtn.disabled = false;
        btnText.style.display = 'inline';
        btnLoading.style.display = 'none';
      }
    });
    
    // Contacto por WhatsApp
    whatsappBtn?.addEventListener('click', function() {
      const formData = new FormData(form);
      const name = formData.get('name') || 'Cliente';
      const email = formData.get('email') || '';
      const subject = formData.get('subject') || 'Consulta general';
      const message = formData.get('message') || '';
      
      let whatsappMessage = `¡Hola! Soy ${name}.\n\n`;
      whatsappMessage += `Asunto: ${subject}\n\n`;
      if (message) {
        whatsappMessage += `Mensaje: ${message}\n\n`;
      }
      if (email) {
        whatsappMessage += `Mi email: ${email}`;
      }
      
      const whatsappUrl = `https://wa.me/573001234567?text=${encodeURIComponent(whatsappMessage)}`;
      window.open(whatsappUrl, '_blank');
    });
    
    function showStatus(message, type) {
      if (!formStatus) return;
      
      formStatus.textContent = message;
      formStatus.className = `form-status ${type}`;
      formStatus.style.display = 'block';
      
      // Ocultar después de 5 segundos
      setTimeout(() => {
        formStatus.style.display = 'none';
      }, 5000);
    }
    
    // Validación en tiempo real
    const inputs = form?.querySelectorAll('input[required], select[required], textarea[required]');
    inputs?.forEach(input => {
      input.addEventListener('blur', function() {
        validateField(this);
      });
      
      input.addEventListener('input', function() {
        if (this.classList.contains('error')) {
          validateField(this);
        }
      });
    });
    
    function validateField(field) {
      const isValid = field.checkValidity();
      
      if (isValid) {
        field.classList.remove('error');
        field.style.borderColor = '#e5e5e5';
      } else {
        field.classList.add('error');
        field.style.borderColor = '#dc3545';
      }
      
      return isValid;
    }
  });
</script>